{
	"name": "FactPrincipal",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SnowflakeTablePrincipal_bhargav",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTabledimName",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTabledimTitle_bhargav",
						"type": "DatasetReference"
					},
					"name": "source3"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTablefactTitleprinciple",
						"type": "DatasetReference"
					},
					"name": "source4"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable14",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "lookup1"
				},
				{
					"name": "lookup2"
				},
				{
					"name": "join1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "surrogateKey1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          TCONST as string,",
				"          ORDERING as decimal(38,0),",
				"          NCONST as string,",
				"          CATEGORY as string,",
				"          JOB as string,",
				"          CHARACTERS as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> source1",
				"source(output(",
				"          NAMEKEY as string,",
				"          NCONST as string,",
				"          PRIMARYNAME as string,",
				"          BIRTHYEAR as string,",
				"          DEATHYEAR as string,",
				"          KNOWNFORTITLES as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> source2",
				"source(output(",
				"          TITLEKEY as decimal(10,0),",
				"          TCONST as string,",
				"          TITLETYPE as string,",
				"          PRIMARYTITLE as string,",
				"          ORIGINALTITLE as string,",
				"          ISADULT as string,",
				"          STARTYEAR as string,",
				"          ENDYEAR as string,",
				"          RUNTIMEMINUTES as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> source3",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     query: 'select NVL(MAX(BRIDGEKEY),0) AS BRIDGEKEY FROM IMDB_SCHEMA.BRIDGETITLEGENRE',",
				"     format: 'query') ~> source4",
				"source1, source2 lookup(source1@NCONST == source2@NCONST,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1",
				"lookup1, source3 lookup(source1@TCONST == source3@TCONST,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup2",
				"lookup2, source3 join(source1@TCONST == source3@TCONST,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 aggregate(groupBy(NAMEKEY,",
				"          source3@TITLEKEY,",
				"          {} = ERROR_FUNCTION(''))) ~> aggregate1",
				"aggregate1 keyGenerate(output(PrinicpalKey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          PRINCIPALKEY as string,",
				"          TITLEKEY as decimal(10,0),",
				"          NAMEKEY as string,",
				"          ORDERING as string,",
				"          CATEGORY as string,",
				"          JOB as string,",
				"          CHARACTERS as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          PRINCIPALKEY = PrinicpalKey,",
				"          TITLEKEY,",
				"          NAMEKEY",
				"     )) ~> sink1"
			]
		}
	}
}